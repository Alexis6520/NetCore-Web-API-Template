<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<variable name="logDirectory" value="logs/${shortdate}"/>

	<variable name="myJsonLayout">
		<layout type="JsonLayout" indentJson="true">
			<attribute name="level" layout="${level:uppercase=true}"/>
			<attribute name="datetime" layout="${date}"/>
			<attribute name="message" layout="${message}"/>
			<attribute name="method" layout="${aspnet-request-method}"/>
			<attribute name="url" layout="${aspnet-request-url:IncludeQueryString=true}"/>
			<attribute name="body" layout="${aspnet-request-posted-body}"/>
			<attribute name="exception" layout="${exception}"/>
		</layout>
	</variable>

	<!-- the targets to write to -->
	<targets>
		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<target xsi:type="File" name="fileTarget" fileName="${logDirectory}/${date:format=HH}.log"
				layout="${myJsonLayout}" />

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="ColoredConsole" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, fileTarget" final="true" />

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Info" final="true" />

		<logger name="*" minlevel="Info" writeTo="lifetimeConsole, fileTarget" />
	</rules>
</nlog>